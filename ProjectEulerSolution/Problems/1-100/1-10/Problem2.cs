namespace ProjectEulerSolution.Problems._1_100._1_10;

// https://projecteuler.net/problem=2
// Each new term in the Fibonacci sequence is generated by adding the previous two terms.
// By starting with 1 and 2, the first 10 terms will be: 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
// By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
internal sealed class Problem2 : IProblem
{
    private const int MaxNumber = 4000000;

    public void Solve()
    {
        int result = GetFibonacciEvenNumbersSum(MaxNumber);

        Console.WriteLine($"Sum of even numbers = {result}");
    }

    private int GetFibonacciEvenNumbersSum(int maxNumber)
    {
        int sum = 2;
        int firstNumber = 1;
        int secondNumber = 2;

        while (secondNumber <= maxNumber)
        {
            int next = firstNumber + secondNumber;

            firstNumber = secondNumber;
            secondNumber = next;

            if (IsEvenNumber(secondNumber))
            {
                sum += secondNumber;
            }
        }

        return sum;
    }
    
    private bool IsEvenNumber(int number)
    {
        return number % 2 == 0;
    }

}
